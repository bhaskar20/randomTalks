#!/usr/bin/nodejs
var debug = require('debug')('randomTalks:server');
var app = require('../app');
var https = require('https');
var fs = require('fs');
var db = require('../db/db');

var options = {
    key: fs.readFileSync('tls/live/www.fbot.in/privkey.pem'),
    cert: fs.readFileSync('tls/live/www.fbot.in/cert.pem'),
    ca: fs.readFileSync('tls/live/www.fbot.in/chain.pem')
};

var port = normalizePort(process.env.PORT || '3000');
app.set('port', port);

var server = https.createServer(options, app);

/*
 * Try DB connect first
 */
db.connect('mongodb://localhost:27017/randomTalks', function(err) {
  if (err) {
    console.log('Unable to connect to Mongo.');
    process.exit(1);
  } else {
    /**
     * Listen on provided port, on all network interfaces.
     */

    server.listen(port);
    server.on('error', onError);
    server.on('listening', onListening);
    }
});

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // port number
    return port;
  }

  return false;
}

/**
 * Event listener for HTTP server "error" event.
 */

function onError(error) {
  if (error.syscall !== 'listen') {
    throw error;
  }

  var bind = typeof port === 'string'
    ? 'Pipe ' + port
    : 'Port ' + port;

  // handle specific listen errors with friendly messages
  switch (error.code) {
    case 'EACCES':
      console.error(bind + ' requires elevated privileges');
      process.exit(1);
      break;
    case 'EADDRINUSE':
      console.error(bind + ' is already in use');
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener for HTTP server "listening" event.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === 'string'
    ? 'pipe ' + addr
    : 'port ' + addr.port;
  debug('Listening on ' + bind);
  console.log('Listening on ' + bind);
}
